Index: app/src/main/java/mnm/bcs106/yoobeecolleges/dragon/NPC_Pool.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package mnm.bcs106.yoobeecolleges.dragon;\r\n\r\nimport android.graphics.BitmapFactory;\r\nimport android.graphics.Canvas;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class NPC_Pool {\r\n    int size = 20;\r\n\r\n    ArrayList<Wooloo> npcWooloo = new ArrayList<Wooloo>();\r\n    ArrayList<RangedNPC>  npcRangedNPC = new ArrayList<RangedNPC>();\r\n    ArrayList<Wizard>  npcWizard = new ArrayList<Wizard>();\r\n    ArrayList<Farmers>  npcFarmers = new ArrayList<Farmers>();\r\n    public NPC_Pool(){\r\n        for(int i = 0 ;i < size; i++){\r\n            npcWooloo.add(new Wooloo(BitmapFactory.decodeResource(GameView.instance.getResources(),R.drawable.wooloo),(float)GameView.instance.cameraSize/45000,100,GameView.instance.cameraSize/40,GameView.instance.cameraSize/40,500));\r\n            npcRangedNPC.add(new RangedNPC(BitmapFactory.decodeResource(GameView.instance.getResources(),R.drawable.wooloo),(float)GameView.instance.cameraSize/25000,300,GameView.instance.cameraSize/40,GameView.instance.cameraSize/40,1));\r\n            npcWizard.add(new Wizard(BitmapFactory.decodeResource(GameView.instance.getResources(),R.drawable.wooloo),(float)GameView.instance.cameraSize/65000,500,GameView.instance.cameraSize/40,GameView.instance.cameraSize/40,25));\r\n\r\n//            if(i%2==0) {\r\n  //              npcFarmers.add(new Farmers(BitmapFactory.decodeResource(GameView.instance.getResources(), R.drawable.villager), (float) GameView.instance.cameraSize / 25000, 500, GameView.instance.cameraSize / 20, GameView.instance.cameraSize / 20, 0));\r\n    //        }\r\n      //      else {\r\n                npcFarmers.add(new Farmers(BitmapFactory.decodeResource(GameView.instance.getResources(), R.drawable.farmer_paper), (float) GameView.instance.cameraSize / 25000, 500, GameView.instance.cameraSize / 60, GameView.instance.cameraSize / 30, 0));\r\n        //    }\r\n        }\r\n    }\r\n    public Wooloo spawnWooloo (int spawnX, int spawnY){\r\n        for (int i = 0;i<size;i++){\r\n            if (!npcWooloo.get(i).alive) {\r\n                npcWooloo.get(i).spawn(spawnX,spawnY);\r\n                return npcWooloo.get(i);\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    public void spawnArcher (int spawnX, int spawnY, int ammount){\r\n        int d = 0;\r\n        for (int i = 0;i<ammount;i++){\r\n            if (!npcRangedNPC.get(i).alive && d < ammount) {\r\n                npcRangedNPC.get(i).spawn(spawnX,spawnY);\r\n                d++;\r\n            }\r\n        }\r\n    }public void spawnWizard (int spawnX, int spawnY, int ammount){\r\n        int d = 0;\r\n        for (int i = 0;i<ammount;i++){\r\n            if (!npcWizard.get(i).alive && d < ammount) {\r\n                npcWizard.get(i).spawn(spawnX,spawnY);\r\n                d++;\r\n            }\r\n        }\r\n    }public Farmers spawnFarmers (int spawnX, int spawnY){\r\n\r\n        for (int i = 0;i<size;i++){\r\n            if (!npcFarmers.get(i).alive) {\r\n                npcFarmers.get(i).spawn(spawnX,spawnY);\r\n                return npcFarmers.get(i);}\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public void draw (Canvas canvas){\r\n        for (int i = 0; i<size;i++){\r\n            if (npcWooloo.get(i).alive){\r\n                npcWooloo.get(i).draw(canvas);\r\n            }if (npcRangedNPC.get(i).alive){\r\n                npcRangedNPC.get(i).draw(canvas);\r\n            }if (npcWizard.get(i).alive){\r\n                npcWizard.get(i).draw(canvas);\r\n            }if (npcFarmers.get(i).alive){\r\n                npcFarmers.get(i).draw(canvas);\r\n            }\r\n        }\r\n    }\r\n    public void update(float deltaTime){\r\n        for (int i = 0; i<size;i++){\r\n            if (npcWooloo.get(i).alive){\r\n                npcWooloo.get(i).update(deltaTime);\r\n            }if (npcRangedNPC.get(i).alive){\r\n                npcRangedNPC.get(i).update(deltaTime);\r\n            }if (npcWizard.get(i).alive){\r\n                npcWizard.get(i).update(deltaTime);\r\n            }if (npcFarmers.get(i).alive){\r\n                npcFarmers.get(i).update(deltaTime);\r\n            }\r\n        }\r\n    }\r\n    public void physics(float deltaTime){\r\n        for (int i = 0; i<size;i++){\r\n            if (npcWooloo.get(i).alive){\r\n                npcWooloo.get(i).physics(deltaTime);\r\n            }if (npcRangedNPC.get(i).alive){\r\n                npcRangedNPC.get(i).physics(deltaTime);\r\n            }if (npcWizard.get(i).alive){\r\n                npcWizard.get(i).physics(deltaTime);\r\n            }if (npcFarmers.get(i).alive){\r\n                npcFarmers.get(i).physics(deltaTime);\r\n            }\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/mnm/bcs106/yoobeecolleges/dragon/NPC_Pool.java	(revision f100d2201452fc6db8a7020c5cd08a46c0f71934)
+++ app/src/main/java/mnm/bcs106/yoobeecolleges/dragon/NPC_Pool.java	(date 1604199027976)
@@ -16,7 +16,7 @@
         for(int i = 0 ;i < size; i++){
             npcWooloo.add(new Wooloo(BitmapFactory.decodeResource(GameView.instance.getResources(),R.drawable.wooloo),(float)GameView.instance.cameraSize/45000,100,GameView.instance.cameraSize/40,GameView.instance.cameraSize/40,500));
             npcRangedNPC.add(new RangedNPC(BitmapFactory.decodeResource(GameView.instance.getResources(),R.drawable.wooloo),(float)GameView.instance.cameraSize/25000,300,GameView.instance.cameraSize/40,GameView.instance.cameraSize/40,1));
-            npcWizard.add(new Wizard(BitmapFactory.decodeResource(GameView.instance.getResources(),R.drawable.wooloo),(float)GameView.instance.cameraSize/65000,500,GameView.instance.cameraSize/40,GameView.instance.cameraSize/40,25));
+            npcWizard.add(new Wizard(BitmapFactory.decodeResource(GameView.instance.getResources(),R.drawable.ottwizard),(float)GameView.instance.cameraSize/65000,500,GameView.instance.cameraSize/40,GameView.instance.cameraSize/40,25));
 
 //            if(i%2==0) {
   //              npcFarmers.add(new Farmers(BitmapFactory.decodeResource(GameView.instance.getResources(), R.drawable.villager), (float) GameView.instance.cameraSize / 25000, 500, GameView.instance.cameraSize / 20, GameView.instance.cameraSize / 20, 0));
@@ -54,9 +54,11 @@
             }
         }
     }public Farmers spawnFarmers (int spawnX, int spawnY){
-
         for (int i = 0;i<size;i++){
             if (!npcFarmers.get(i).alive) {
+                for (int j = 0;j > GameView.instance.fortress.currentBuildingsLeft.size();j++){
+                    if (GameView.instance.fortress.currentBuildingsLeft.get(j) == );
+                }
                 npcFarmers.get(i).spawn(spawnX,spawnY);
                 return npcFarmers.get(i);}
         }
Index: app/src/main/java/mnm/bcs106/yoobeecolleges/dragon/Farmers.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package mnm.bcs106.yoobeecolleges.dragon;\r\n\r\nimport android.graphics.Bitmap;\r\n\r\npublic class Farmers extends NPC {\r\n\r\n    public int farmX;\r\n    public boolean wasAttacked = false;\r\n    public boolean atFarm = false;\r\n    public boolean finished;\r\n\r\n    public Farmers(Bitmap bitmap, float speed, int maxHP, int width, int height,int FX) {\r\n        super(bitmap, speed, maxHP, width, height);\r\n        creationPoint.x = 0;\r\n        creationPoint.y = 0;\r\n        farmX = creationPoint.x+500;\r\n    }\r\n    public void doStuff(){\r\n         finished = false;\r\n    }\r\n\r\n    @Override\r\n    public void update(float deltaTime) {\r\n        if (!wasAttacked){\r\n            if (Math.abs(GameView.instance.player.position.x-npcX)<300){\r\n                flee = true;\r\n                target.x = (int) (npcX+(-(Math.signum(GameView.instance.player.position.x-npcX))*1500));\r\n                creationPoint.x= target.x;\r\n                wasAttacked = true;\r\n            }\r\n            if (atFarm && target.x == npcX){\r\n                if (countdown>=2000) {\r\n                    doStuff();\r\n                    if (finished == true){\r\n                        target.x = creationPoint.x;\r\n                        atFarm = false;\r\n                    }\r\n                }\r\n            }else if (npcX == target.x && !atFarm){\r\n                target.x = farmX;\r\n                atFarm = true;\r\n            }\r\n        }else {\r\n            if (Math.abs(GameView.instance.player.position.x-npcX)<300){\r\n                flee = true;\r\n                target.x = (int) (npcX+(-(Math.signum(GameView.instance.player.position.x-npcX))*1500));\r\n                creationPoint.x= target.x;\r\n            }else idle(500,Math.abs(npcX-target.x) < 10);\r\n        }\r\n        super.update(deltaTime);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/mnm/bcs106/yoobeecolleges/dragon/Farmers.java	(revision f100d2201452fc6db8a7020c5cd08a46c0f71934)
+++ app/src/main/java/mnm/bcs106/yoobeecolleges/dragon/Farmers.java	(date 1604198371339)
@@ -6,21 +6,24 @@
 
     public int farmX;
     public boolean wasAttacked = false;
-    public boolean atFarm = false;
-    public boolean finished;
+    public boolean atFarm = true;
 
     public Farmers(Bitmap bitmap, float speed, int maxHP, int width, int height,int FX) {
         super(bitmap, speed, maxHP, width, height);
-        creationPoint.x = 0;
-        creationPoint.y = 0;
+    }
+
+    @Override
+    public void spawn(int spawnX, int spawnY) {
+        super.spawn(spawnX, spawnY);
         farmX = creationPoint.x+500;
     }
+
     public void doStuff(){
-         finished = false;
     }
 
     @Override
     public void update(float deltaTime) {
+        System.out.println(countdown);
         if (!wasAttacked){
             if (Math.abs(GameView.instance.player.position.x-npcX)<300){
                 flee = true;
@@ -28,15 +31,18 @@
                 creationPoint.x= target.x;
                 wasAttacked = true;
             }
-            if (atFarm && target.x == npcX){
-                if (countdown>=2000) {
-                    doStuff();
-                    if (finished == true){
-                        target.x = creationPoint.x;
-                        atFarm = false;
-                    }
+            System.out.println(target.x);
+            System.out.println(npcX);
+            if (atFarm && Math.abs(target.x-npcX) < 7){
+                if (countdown>=7000) {
+                    System.out.println("finished");
+                    target.x = creationPoint.x;
+                    atFarm = false;
+                    countdown = 0;
+                }else {
+                    doStuff();
                 }
-            }else if (npcX == target.x && !atFarm){
+            }else if (Math.abs(target.x-npcX) < 7 && !atFarm){
                 target.x = farmX;
                 atFarm = true;
             }
Index: app/src/main/java/mnm/bcs106/yoobeecolleges/dragon/NPC.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package mnm.bcs106.yoobeecolleges.dragon;\r\n\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.Canvas;\r\nimport android.graphics.Matrix;\r\nimport android.graphics.Point;\r\nimport android.graphics.Rect;\r\nimport android.graphics.RectF;\r\nimport android.text.BoringLayout;\r\n\r\nimport java.sql.Time;\r\nimport java.util.Timer;\r\nimport java.util.Vector;\r\n\r\npublic class NPC {\r\n    public Bitmap npcBitmap;\r\n    public int npcX,npcY,npcMaxHP,npcHp,npcWidth,npcHeight;\r\n    public Rect npcRect, npcCollider;\r\n    public float npcSpeed;\r\n    public Boolean alive = false;\r\n    public Point movement;\r\n    public Point target = new Point();\r\n    public float npcFleeSpeed;\r\n    public boolean flee = false;\r\n    public ActionController damagePeriod;\r\n    public int direction;\r\n    public int countdown;\r\n    double random;\r\n    public Point creationPoint = new Point();\r\n    public NPC (Bitmap bitmap, float speed, int maxHP, int width,int height) {\r\n        npcBitmap = bitmap;\r\n        npcX = 0;\r\n        npcY = 0;\r\n        npcMaxHP = maxHP;\r\n        npcHp = maxHP;\r\n        npcSpeed = speed;\r\n        npcFleeSpeed = (float) ((Math.random()*npcSpeed)+(npcSpeed*3));\r\n        npcWidth = width;\r\n        npcHeight = height;\r\n        npcRect = new Rect(npcX,npcY,width+npcX,height+npcY);\r\n        npcCollider = new Rect(npcX,npcY,width+npcX,height+npcY);\r\n        damagePeriod = new ActionController(0,5000,5000);\r\n        random = Math.random();\r\n    }\r\n    public void spawn (int spawnX, int spawnY){\r\n        npcX = spawnX;\r\n        npcY = spawnY;\r\n        creationPoint.x = spawnX;\r\n        creationPoint.y = spawnY;\r\n        alive = true;\r\n    }\r\n    public  void OnDamage () {\r\n        damagePeriod.triggerAction();\r\n        npcHp-=1;\r\n        if (npcHp<=0){\r\n            death();\r\n        }\r\n    }\r\n    public void death(){\r\n        alive = false;\r\n        npcX = 0;\r\n        npcY = 0;\r\n    }\r\n    float distTravel = 0;\r\n    public void draw(Canvas canvas){\r\n        if (alive){\r\n            RectF tempRect = new RectF(0,0,npcBitmap.getWidth(),npcBitmap.getHeight());\r\n            int top  = (int) (npcRect.top+Math.sin(distTravel/4+random*Math.PI*2)*3);\r\n\r\n            int left  = npcRect.left;\r\n            int right  = left+npcRect.width();\r\n            int bottom  = top+npcRect.height();\r\n            RectF destTempRect = new RectF(left,top,right,bottom);\r\n            Matrix matrix = new Matrix();\r\n            matrix.setRectToRect(tempRect,destTempRect, Matrix.ScaleToFit.FILL);\r\n            matrix.postScale(direction,1,destTempRect.centerX(),destTempRect.centerY());\r\n            canvas.drawBitmap(npcBitmap,matrix,Scene.instance.frontPaint);\r\n        }\r\n    }\r\n\r\n    public  boolean there = false;\r\n    public void moveToTarget(float deltaTime){\r\n        if (Math.abs(target.x-npcX) > 5){\r\n            if (!flee){\r\n                npcX+=direction*npcSpeed*deltaTime;\r\n                distTravel+=npcSpeed*deltaTime;\r\n            } else {\r\n                npcX+=direction*npcFleeSpeed*deltaTime;\r\n                distTravel+=npcFleeSpeed*deltaTime;\r\n            }\r\n        }\r\n        else {\r\n            distTravel = 0;\r\n        }\r\n    }\r\n    public void update(float deltaTime){\r\n        countdown+=deltaTime;\r\n        if (Math.abs(target.x-npcX)>1){\r\n            direction = (int) Math.signum(target.x-npcX);\r\n        }\r\n        moveToTarget(deltaTime);\r\n        npcY = (int) GameView.instance.groundLevel-npcRect.height();\r\n        npcRect.offsetTo((int) (npcX+GameView.instance.cameraDisp.x),npcY);\r\n\r\n\r\n    }\r\n    public  void  physics(float deltaTime) {\r\n        npcCollider = new Rect(npcX, npcY, npcX + npcRect.width(), npcY + npcRect.height());\r\n        //System.out.println(\"npcphysics\");\r\n        if (GameView.instance.player.fireBreath.collision(npcCollider)&&!damagePeriod.performing){\r\n\r\n                //System.out.println(npcHp);\r\n                OnDamage();\r\n\r\n        }\r\n    }\r\n\r\n    public void idle(int boundry,boolean lessTen){\r\n        if (countdown >= Math.random()*1000+1000){\r\n            if (lessTen) {\r\n                flee = false;\r\n                double targetDistance = (Math.random() - 0.5) * boundry;\r\n                target.x = (int) (creationPoint.x + targetDistance);\r\n                countdown = 0;\r\n            }\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/mnm/bcs106/yoobeecolleges/dragon/NPC.java	(revision f100d2201452fc6db8a7020c5cd08a46c0f71934)
+++ app/src/main/java/mnm/bcs106/yoobeecolleges/dragon/NPC.java	(date 1604121473784)
@@ -45,8 +45,9 @@
     public void spawn (int spawnX, int spawnY){
         npcX = spawnX;
         npcY = spawnY;
-        creationPoint.x = spawnX;
-        creationPoint.y = spawnY;
+        creationPoint.x = npcX;
+        creationPoint.y = npcY;
+        target.x = npcX;
         alive = true;
     }
     public  void OnDamage () {
@@ -101,8 +102,6 @@
         moveToTarget(deltaTime);
         npcY = (int) GameView.instance.groundLevel-npcRect.height();
         npcRect.offsetTo((int) (npcX+GameView.instance.cameraDisp.x),npcY);
-
-
     }
     public  void  physics(float deltaTime) {
         npcCollider = new Rect(npcX, npcY, npcX + npcRect.width(), npcY + npcRect.height());
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_10_30_2020_8_58_AM__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_10_30_2020_8_58_AM__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_10_28_2020_5_13_PM__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_10_28_2020_5_13_PM__Default_Changelist_.xml
